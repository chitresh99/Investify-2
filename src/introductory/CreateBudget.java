package introductory;

import com.itextpdf.text.BaseColor;
import java.util.Random;
import java.io.FileOutputStream;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.SQLException;
import javax.swing.JOptionPane;

public class CreateBudget extends javax.swing.JFrame {

    Connection con;
    ResultSet rs;
    PreparedStatement pst;

    public CreateBudget() {
        initComponents();
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/investify", "root", "CHIR2502004|");
            pst = con.prepareStatement("select * from createbudget"); //gets all the columns from the database
            rs = pst.executeQuery();

            if (rs.next()) {
                txtbudgetname.setText(rs.getString(1)); // get the budget name to the corresponding text field
                txtamt.setText(rs.getString(2));
                startdate.setText(rs.getString(3)); 
                lastdate.setText(rs.getString(4));  
                txtexpense.setText(rs.getString(5));
                txtemergencyfund.setText(rs.getString(6));
                txtserialno.setText(rs.getString(7));
                txtlimit.setText(rs.getString(8));
                String notes = rs.getString(9);//gets the notes as a String
                notesarea.setText(notes);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(introductory.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(introductory.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    private String generateRandomAlphaNumeric(int length) {
        String characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"; //Define the characters from which to generate the random string
        Random random = new Random();// Initialize a Random object for generating random numbers
        StringBuilder result = new StringBuilder(length);// Create a StringBuilder to store the generated random string

        for (int i = 0; i < length; i++) { //Iterate length times to select random characters from characters and append them to the result
            int index = random.nextInt(characters.length()); //generate a random index
            result.append(characters.charAt(index));
        }

        return result.toString();
    }

    private void clearTextFields() {
        txtbudgetname.setText("");
        txtamt.setText("");
        startdate.setText("");
        lastdate.setText("");
        txtexpense.setText("");
        txtemergencyfund.setText("");
        txtserialno.setText("");
        txtlimit.setText("");
        notesarea.setText("");
        
    }


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtbudgetname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtamt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtexpense = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtemergencyfund = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        print = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtserialno = new javax.swing.JTextField();
        generate = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtlimit = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        notesarea = new javax.swing.JTextArea();
        Delete = new javax.swing.JButton();
        search = new javax.swing.JButton();
        startdate = new javax.swing.JTextField();
        lastdate = new javax.swing.JTextField();
        Update = new javax.swing.JButton();
        clear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(400, 40));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 50, 139));

        jLabel1.setFont(new java.awt.Font("Adobe Clean ExtraBold", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Create Budget");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Adobe Clean ExtraBold", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("INVESTIFY");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(291, 291, 291))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Adobe Clean ExtraBold", 0, 24)); // NOI18N
        jLabel3.setText("Budget Name ");

        jLabel4.setFont(new java.awt.Font("Zuume", 0, 18)); // NOI18N
        jLabel4.setText("Budget Amount ");

        txtamt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtamtActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Zuume", 0, 18)); // NOI18N
        jLabel5.setText("START DATE ");

        jLabel6.setFont(new java.awt.Font("Zuume", 0, 18)); // NOI18N
        jLabel6.setText("Last Day");

        jLabel7.setFont(new java.awt.Font("Zuume", 0, 18)); // NOI18N
        jLabel7.setText("Estimated Expense");

        jLabel8.setFont(new java.awt.Font("Zuume", 0, 18)); // NOI18N
        jLabel8.setText("Emergency Fund ");

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        print.setText("Print ");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Zuume", 0, 18)); // NOI18N
        jLabel10.setText("Budget Serial Number");

        txtserialno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtserialnoActionPerformed(evt);
            }
        });

        generate.setText("Generate");
        generate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Zuume", 0, 18)); // NOI18N
        jLabel9.setText("Budget Limit");

        txtlimit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtlimitActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Zuume", 0, 18)); // NOI18N
        jLabel11.setText("Notes");

        notesarea.setColumns(20);
        notesarea.setRows(5);
        jScrollPane1.setViewportView(notesarea);

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        startdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startdateActionPerformed(evt);
            }
        });

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtexpense)
                    .addComponent(txtamt)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtbudgetname)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtemergencyfund)
                    .addComponent(startdate, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastdate, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(201, 201, 201)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(save, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(print, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(43, 43, 43)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Delete)
                                    .addComponent(clear))
                                .addGap(33, 33, 33)
                                .addComponent(Update)
                                .addGap(31, 31, 31)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(back, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                    .addComponent(search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel10)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtserialno, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(generate, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtlimit, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 32, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(generate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtserialno)
                    .addComponent(txtbudgetname, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtamt, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtlimit, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(startdate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lastdate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtexpense, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtemergencyfund, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(save)
                            .addComponent(Delete)
                            .addComponent(search)
                            .addComponent(Update))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(print, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                                    .addComponent(clear))
                                .addGap(69, 69, 69))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(back)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtamtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtamtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtamtActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        try {
            pst = con.prepareStatement("INSERT INTO createbudget (budgetname, budgetamount, startdate, lastdate, estexp, emergencyfund, serialno, `limit`, note) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)");
            pst.setString(1, txtbudgetname.getText()); // Set the budget name
            pst.setDouble(2, Double.parseDouble(txtamt.getText())); // Set the budget amount as a double
            pst.setString(3, startdate.getText()); // Set the start date
            pst.setString(4, lastdate.getText()); // Set the last date
            pst.setDouble(5, Double.parseDouble(txtexpense.getText())); // Set the estimated expense as a double
            pst.setDouble(6, Double.parseDouble(txtemergencyfund.getText())); // Set the emergency fund as a double
            pst.setString(7, txtserialno.getText()); // Set the generated serial number
            pst.setString(8, txtlimit.getText()); // Set the limit
            pst.setString(9, notesarea.getText()); // Set the notes

            int rowsInserted = pst.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(this, "Success");
            } else {
                JOptionPane.showMessageDialog(this, "Failed to insert data into the database", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_saveActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        // TODO add your handling code here:
        generatePDF();
    }//GEN-LAST:event_printActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        homepage homepageFrame = new homepage();

        // Set the login frame to be visible
        homepageFrame.setVisible(true);

        // Close the current introductory frame
        this.dispose();
    }//GEN-LAST:event_backActionPerformed

    private void generateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateActionPerformed
        // TODO add your handling code here:
        // Generate a random alphanumeric number
        String randomString = generateRandomAlphaNumeric(8); // Change 8 to the desired length

        // Set the generated number in your text field (txtserialno)
        txtserialno.setText(randomString);
    }//GEN-LAST:event_generateActionPerformed

    private void txtserialnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtserialnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtserialnoActionPerformed

    private void display() {
        displaybudget();
    }

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:

        String nameToSearch = JOptionPane.showInputDialog(this, "Enter name for search"); //pops up a option pane to search

        if (nameToSearch != null && !nameToSearch.isEmpty()) { //checks if the string name is empty or null
            try {
                pst = con.prepareStatement("SELECT * FROM createbudget WHERE budgetname = ?"); //select all data from 'createbudget' where the budget name matches the provided name
                pst.setString(1, nameToSearch);
                rs = pst.executeQuery(); //executes the query and stores the result

                if (rs.next()) {// checks for another row if there is it gets it from the database
                    txtbudgetname.setText(rs.getString("budgetname")); //it sets the text from the database 
                    txtamt.setText(rs.getString("budgetamount"));
                    startdate.setText(rs.getString("startdate"));
                    lastdate.setText(rs.getString("lastdate"));
                    txtexpense.setText(rs.getString("estexp"));
                    txtemergencyfund.setText(rs.getString("emergencyfund"));
                    txtserialno.setText(rs.getString("serialno"));
                    txtlimit.setText(rs.getString("limit"));
                    notesarea.setText(rs.getString("note"));
                } else {
                    JOptionPane.showMessageDialog(this, "No matching record found.");
                }

            } catch (SQLException ex) {
                Logger.getLogger(introductory.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_searchActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        
        
        try {
            pst = con.prepareStatement("DELETE FROM createbudget WHERE budgetname = ?"); //Prepare a SQL statement to delete the record from createbudget where the budget name matches the name
            pst.setString(1, txtbudgetname.getText());
            int rowsDeleted = pst.executeUpdate(); //Execute the SQL statement and get the number of rows deleted

            if (rowsDeleted > 0) { //if a record is deleted it shoews this messages
                JOptionPane.showMessageDialog(this, "Record deleted successfully.");

                clearTextFields(); //clears the field after deletion of the record
            } else {
                JOptionPane.showMessageDialog(this, "No matching record found.");
            }
        } catch (SQLException ex) {
            Logger.getLogger(introductory.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            //closes the prepare statement and connection and helps us release resources
            try {
                if (pst != null) {
                    pst.close();
                }
                if (con != null) {
                    con.close();
                }
            } catch (SQLException ex) {
                Logger.getLogger(introductory.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_DeleteActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        

        try {
            //mysql query to update
            pst = con.prepareStatement("UPDATE createbudget SET budgetamount = ?, startdate = ?, lastdate = ?, estexp = ?, emergencyfund = ?, serialno = ?, `limit` = ?, note = ? WHERE budgetname = ?");

            pst.setDouble(1, Double.parseDouble(txtamt.getText()));
            pst.setString(2, startdate.getText());
            pst.setString(3, lastdate.getText());
            pst.setDouble(4, Double.parseDouble(txtexpense.getText()));
            pst.setDouble(5, Double.parseDouble(txtemergencyfund.getText()));
            pst.setString(6, txtserialno.getText());
            pst.setString(7, txtlimit.getText());
            pst.setString(8, notesarea.getText());
            pst.setString(9, txtbudgetname.getText());

            int rowsUpdated = pst.executeUpdate();
            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Success");
            } else {
                JOptionPane.showMessageDialog(this, "No matching record found.");
            }
        } catch (SQLException ex) {
            Logger.getLogger(introductory.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_UpdateActionPerformed

    private void txtlimitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtlimitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtlimitActionPerformed

    private void startdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startdateActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed

        // Clear the fields
        txtbudgetname.setText("");
        txtamt.setText("");
        startdate.setText("");
        lastdate.setText("");
        txtexpense.setText("");
        txtemergencyfund.setText("");
        notesarea.setText("");
        txtlimit.setText("");
        txtserialno.setText("");
    }//GEN-LAST:event_clearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateBudget().setVisible(true);
            }
        });
    }

    private void displaybudget() {
        String budgetName = txtbudgetname.getText();
        String budgetAmount = txtamt.getText();
        String startDate = startdate.getText();
        String lastDate = lastdate.getText();
        String estimatedExpense = txtexpense.getText();
        String emergencyFund = txtemergencyfund.getText();
        String notes = notesarea.getText();

        System.out.println("Budget Name: " + budgetName);
        System.out.println("Budget Amount: " + budgetAmount);
        System.out.println("Start Date: " + startDate);
        System.out.println("End Date: " + lastDate);
        System.out.println("Estimated Expense: " + estimatedExpense);
        System.out.println("Emergency Fund: " + emergencyFund);
        System.out.println("Notes: " + notes);
    }

    private void generatePDF() {

        Document document = new Document();

        try {

            String userHome = System.getProperty("user.home");
            String desktopPath = userHome + File.separator + "Desktop";

            String filePath = desktopPath + File.separator + "Investify.pdf";

            PdfWriter.getInstance(document, new FileOutputStream(filePath));

            document.open();

            com.itextpdf.text.Font titleFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 48, BaseColor.BLACK);

            Paragraph title = new Paragraph("INVESTIFY", titleFont);
            title.setAlignment(Element.ALIGN_CENTER);

            document.add(title);

            String budgetName = txtbudgetname.getText();
            String budgetAmount = txtamt.getText();
            String startDate = startdate.getText();
            String lastDate = lastdate.getText();
            String estimatedExpense = txtexpense.getText();
            String emergencyFund = txtemergencyfund.getText();
            String notes = notesarea.getText(); // Retrieve notes from the textarea

            StringBuilder budgetInfo = new StringBuilder();
            budgetInfo.append("Budget Name: ").append(budgetName).append("\n");
            budgetInfo.append("Budget Amount: ").append(budgetAmount).append("\n");
            budgetInfo.append("Start Date: ").append(startDate).append("\n");
            budgetInfo.append("End Date: ").append(lastDate).append("\n");
            budgetInfo.append("Estimated Expense: ").append(estimatedExpense).append("\n");
            budgetInfo.append("Emergency Fund: ").append(emergencyFund).append("\n");
            budgetInfo.append("Notes: ").append(notes);

            Paragraph paragraph = new Paragraph(budgetInfo.toString());
            document.add(paragraph);

            document.close();

            JOptionPane.showMessageDialog(this, "PDF generated successfully and saved on the desktop!", "Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error generating PDF: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Delete;
    private javax.swing.JButton Update;
    private javax.swing.JButton back;
    private javax.swing.JButton clear;
    private javax.swing.JButton generate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastdate;
    private javax.swing.JTextArea notesarea;
    private javax.swing.JButton print;
    private javax.swing.JButton save;
    private javax.swing.JButton search;
    private javax.swing.JTextField startdate;
    private javax.swing.JTextField txtamt;
    private javax.swing.JTextField txtbudgetname;
    private javax.swing.JTextField txtemergencyfund;
    private javax.swing.JTextField txtexpense;
    private javax.swing.JTextField txtlimit;
    private javax.swing.JTextField txtserialno;
    // End of variables declaration//GEN-END:variables

}
